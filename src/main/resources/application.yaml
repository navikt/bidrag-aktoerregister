spring:
  flyway:
    schemas: migrations
    locations: classpath:db/migration
  jpa:
    hibernate:
      ddl-auto: none
    database: POSTGRESQL
  datasource:
    hikari:
      maximum-pool-size: '4'
      schema: aktoerregister
    password: ${DB_PASSWORD}
    username: ${DB_USERNAME}
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}
  batch:
    job:
      enabled: 'false'
    jdbc:
      initialize-schema: never

springdoc:
  swagger-ui:
    path: /

no.nav.security.jwt:
  client:
    registration:
      bidrag-samhandler:
        resource-url: ${BIDRAG_SAMHANDLER_URL}
        token-endpoint-url: https://login.microsoftonline.com/${AZURE_APP_TENANT_ID}/oauth2/v2.0/token
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: api://${BIDRAG_SAMHANDLER_SCOPE}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_post
      bidrag-person:
        resource-url: ${BIDRAG_PERSON_URL}
        token-endpoint-url: https://login.microsoftonline.com/${AZURE_APP_TENANT_ID}/oauth2/v2.0/token
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: api://${BIDRAG_PERSON_SCOPE}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_post
  issuer:
    aad:
      discovery_url: https://login.microsoftonline.com/${AZURE_APP_TENANT_ID}/v2.0/.well-known/openid-configuration
      accepted_audience: ${AZURE_APP_CLIENT_ID}, api://${AZURE_APP_CLIENT_ID}
    maskinporten:
      discovery-url: ${MASKINPORTEN_WELL_KNOWN_URL}
      validation:
        optional-claims: aud,sub,nbf
      accepted_audience: ${MASKINPORTEN_AUDIENCE}

mq:
  tssRequestQueue: ${MQ_TSS_REQUEST_QUEUE}
  channel: ${MQ_CHANNEL}
  applicationName: ${MQ_APPLICATION_NAME}
  queueManager: ${MQ_QUEUE_MANAGER}
  password: ${MQ_PASSWORD}
  timeout: ${MQ_TIMEOUT}
  backOffMaxInterval: '300000'
  port: ${MQ_PORT}
  tpsRequestQueue: ${MQ_TPS_REQUEST_QUEUE}
  username: ${MQ_USERNAME}
  host: ${MQ_HOST}
  backOffInitialInterval: '15000'
  tpsEventQueue: ${MQ_TPS_EVENT_QUEUE}